export enum BrowserViewIPCChannels {
  loadURL = 'BrowserViewIPC:loadURL',
  getURL = 'BrowserViewIPC:getURL',
  reload = 'BrowserViewIPC:reload',
  openURLWithExternalBrowser = 'BrowserViewIPC:openURLWithExternalBrowser',
  canGoBack = 'BrowserViewIPC:canGoBack',
  canGoForward = 'BrowserViewIPC:canGoForward',
  goForward = 'BrowserViewIPC:goForward',
  goBack = 'BrowserViewIPC:goBack',
  focus = 'BrowserViewIPC:focus',
  blur = 'BrowserViewIPC:blur',
  executeJavaScript = 'BrowserViewIPC:executeJavaScript',
  insertCSS = 'BrowserViewIPC:insertCSS',
  findInPage = 'BrowserViewIPC:findInPage',
  stopFindInPage = 'BrowserViewIPC:stopFindInPage',
  hide = 'BrowserViewIPC:hide',
  setRect = 'BrowserViewIPC:setRect',
  setBackgroundColor = 'BrowserViewIPC:setBackgroundColor',

  focusURLInput = 'BrowserViewIPC:focusURLInput',
  startSearch = 'BrowserViewIPC:startSearch',

  eventConsoleMessage = 'BrowserViewIPC:eventConsoleMessage',
  eventDOMReady = 'BrowserViewIPC:eventDOMReady',
  eventDidStartNavigation = 'BrowserViewIPC:eventDidStartLoading',
  eventDidNavigate = 'BrowserViewIPC:eventDidNavigate',
  eventDidNavigateInPage = 'BrowserViewIPC:eventDidNavigateInPage',
  eventBeforeInput = 'BrowserViewIPC:eventBeforeInput',
  eventFoundInPage = 'BrowserViewIPC:eventFoundInPage',
  eventWillDownload = 'BrowserViewIPC:eventWillDownload',
  eventOpenIssueWindow = 'BrowserViewIPC:eventOpenIssueWidow',
}
